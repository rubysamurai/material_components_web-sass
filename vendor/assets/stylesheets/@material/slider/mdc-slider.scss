//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "@material/theme/mixins";
@import "@material/rtl/mixins";
@import "./variables";

$mdc-slider-main-grey: #bdbdbd;
$mdc-slider-dark-theme-grey: #5c5c5c;

// postcss-bem-linter: define slider

@keyframes mdc-slider-emphasize {
  0% {
    animation-timing-function: ease-out;
  }

  50% {
    animation-timing-function: ease-in;
    transform: scale(.85);
  }

  100% {
    transform: scale(.571);
  }
}

.mdc-slider {
  position: relative;
  width: 100%;
  height: 48px;
  cursor: pointer;
  touch-action: pan-x;
  -webkit-tap-highlight-color: rgba(black, 0);

  &:focus {
    outline: none;
  }

  &__track-container {
    position: absolute;
    top: 50%;
    width: 100%;
    height: 2px;
    background-color: $mdc-slider-main-grey;
    overflow: hidden;

    @include mdc-theme-dark(".mdc-slider") {
      background-color: $mdc-slider-dark-theme-grey;
    }
  }

  &__track {
    @include mdc-theme-prop(background-color, primary);

    position: absolute;
    width: 100%;
    height: 100%;
    transform-origin: left top;
    will-change: transform;

    @include mdc-rtl(".mdc-slider") {
      transform-origin: right top;
    }
  }

  &__thumb-container {
    position: absolute;
    top: 15px;
    left: 0;
    width: 21px;
    // Ensure that touching anywhere within the Y-coordinate space of thumb
    // is considered "clicking on the thumb".
    height: 100%;
    will-change: transform;
  }

  &__thumb {
    @include mdc-theme-prop(fill, primary);
    @include mdc-theme-prop(stroke, primary);

    position: absolute;
    top: 0;
    left: 0;
    transform: scale(.571);
    transition: transform 100ms ease-out, fill 100ms ease-out, stroke 100ms ease-out;
    stroke-width: 3.5;
  }

  &__focus-ring {
    @include mdc-theme-prop(background-color, primary);

    width: 21px;
    height: 21px;
    transition: transform 266.67ms ease-out, opacity 266.67ms ease-out, background-color 266.67ms ease-out;
    border-radius: 50%;
    opacity: 0;
  }
}

.mdc-slider--active {
  .mdc-slider__thumb {
    transform: scale3d(1, 1, 1);
  }
}

.mdc-slider--focus {
  .mdc-slider__thumb {
    animation: mdc-slider-emphasize 266.67ms linear;
  }

  .mdc-slider__focus-ring {
    transform: scale3d(1.55, 1.55, 1.55);
    opacity: .25;
  }
}

.mdc-slider--disabled {
  cursor: auto;

  .mdc-slider__track {
    background-color: $mdc-slider-main-grey;

    @include mdc-theme-dark(".mdc-slider", true) {
      background-color: $mdc-slider-dark-theme-grey;
    }
  }

  // We use !important here to override all styles without having to use excessive
  // :not() selectors or intricate compound selectors.
  .mdc-slider__thumb {
    fill: $mdc-slider-main-grey !important;
    stroke: $mdc-slider-default-assumed-bg-color !important;
    stroke: var(--mdc-slider-bg-color-behind-component, $mdc-slider-default-assumed-bg-color) !important;

    @include mdc-theme-dark(".mdc-slider", true) {
      fill: $mdc-slider-dark-theme-grey !important;
      stroke: $mdc-slider-dark-theme-assumed-bg-color !important;
      stroke: var(--mdc-slider-bg-color-behind-component, $mdc-slider-dark-theme-assumed-bg-color) !important;
    }
  }
}

.mdc-slider--off {
  .mdc-slider__track {
    opacity: 0;
  }

  // stylelint-disable-next-line plugin/selector-bem-pattern
  .mdc-slider__thumb {
    fill: $mdc-slider-default-assumed-bg-color;
    fill: var(--mdc-slider-bg-color-behind-component, $mdc-slider-default-assumed-bg-color);
    stroke: $mdc-slider-main-grey;

    @include mdc-theme-dark(".mdc-slider", true) {
      fill: $mdc-slider-dark-theme-assumed-bg-color;
      fill: var(--mdc-slider-bg-color-behind-component, $mdc-slider-dark-theme-assumed-bg-color);
      stroke: $mdc-slider-dark-theme-grey;
    }
  }

  // stylelint-disable plugin/selector-bem-pattern
  &.mdc-slider--focus {
    .mdc-slider__thumb {
      fill: #dedede;

      @include mdc-theme-dark(".mdc-slider", true) {
        fill: #82848c;
        stroke: #82848c;
      }
    }
  }

  &.mdc-slider--active.mdc-slider--focus {
    .mdc-slider__thumb {
      stroke: #8c8c8c;

      @include mdc-theme-dark(".mdc-slider", true) {
        stroke: $mdc-slider-dark-theme-grey;
      }
    }
  }

  .mdc-slider__focus-ring {
    background-color: $mdc-slider-main-grey;
  }
  // stylelint-enable plugin/selector-bem-pattern
}

.mdc-slider--in-transit {
  .mdc-slider__thumb {
    transition-delay: 140ms;
  }
}

// NOTE(traviskaufman): There are multiple cases where we want the slider to
// transition seamlessly even though we're jumping to a spot. The selectors
// below highlight these cases. The selectors are supplemented by a comment
// denoting their semantic meaning within the slider.

// When a user clicks somewhere on the track that is not directly the slider
// thumb container, we transition to the place where the user clicked.
.mdc-slider--in-transit,
// When a user is using the arrow keys to modify the value of the slider rather
// than dragging with a pointer, we transition from one value to another.
.mdc-slider:focus:not(.mdc-slider--active) {
  .mdc-slider__thumb-container,
  .mdc-slider__track {
    transition: transform 80ms ease;
  }
}

// postcss-bem-linter: end
